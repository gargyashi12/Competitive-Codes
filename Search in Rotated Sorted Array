class Solution {
public:
    int search(vector<int>& nums, int target) {
        int n=nums.size();
        int low=0,high=n-1,x;
	    while(low<=high)
	    {
            if(nums[low]<nums[high])
            {
                x=low;
                break;
            }
	        int mid=low+(high-low)/2;
	        int next=(mid+1)%n;
	        int prev=(mid+n-1)%n;
	        if(nums[mid]<=nums[next] && nums[mid]<=nums[prev])
	        {
                x=mid;
                break;
            }
	        if(nums[low]<=nums[mid])
	        low=mid+1;
	        else if(nums[high]>=nums[mid])
	        high=mid-1;
	    }
	    low=0,high=x-1;
        while(low<=high)
        {
            int mid=low+(high-low)/2;
            if(nums[mid]==target)
                return mid;
            else if(nums[mid]>target)
                high=mid-1;
            else
                low=mid+1;
        }
        low=x,high=n-1;
        while(low<=high)
        {
            int mid=low+(high-low)/2;
            if(nums[mid]==target)
                return mid;
            else if(nums[mid]>target)
                high=mid-1;
            else
                low=mid+1;
        }
        return -1;
    }
};
